#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        rotate: rotate {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTATE";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R                           &kp T                                                    &kp Y         &kp U  &kp I      &kp O       &kp P
&kp A             &lt 4 S           &kp D         &kp F                           &kp G             &mkp MB1                    &kp AT     &kp H         &kp J  &kp K      &lt 4 L     &kp MINUS
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V                           &kp B             &mkp MB2                    &kp COLON  &kp N         &kp M  &kp COMMA  &kp PERIOD  &kp PLUS
&kp LEFT_SHIFT    &kp LEFT_CONTROL  &kp LEFT_ALT  &lt_to_layer_0 1 LANG_HIRAGANA  &lt 2 LANGUAGE_5  &lt_to_layer_0 3 SPACE      &kp ENTER  &lt 1 DELETE                                &kp DEL
            >;

            sensor-bindings = <&rotate>;
        };

        FUNCTION {
            bindings = <
&kp N1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans        &trans        &trans        &trans        &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans        &trans        &trans        &trans        &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans        &trans        &trans        &trans        &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans       &trans  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp LG(R)                               &kp LG(R)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans  &trans
&lt 5 SPACE  &trans  &mkp MB1         &mkp MB2           &mkp MB3   &mkp MB1      &kp LC(LS(W))  &mkp MB3   &mkp MB1         &mkp MB2           &trans  &lt 5 SPACE
&trans       &trans  &mkp MB4         &mkp MB5           &trans     &mkp MB2      &trans         &trans     &mkp MB4         &mkp MB5           &trans  &trans
&trans       &trans  &trans           &trans             &trans     &trans        &trans         &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans    &trans    &trans                        &kp LC(W)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans  &trans
&trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans      &trans  &mkp MB3   &mkp MB1         &mkp MB2           &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans      &trans  &trans     &mkp MB4         &mkp MB5           &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans      &trans  &trans                                                 &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans                     &kp LC(W)  &kp LC(W)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)                           &kp LC(W)      &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans  &trans
&lt_to_layer_0 5 KP_MINUS  &trans     &mkp MB1   &mkp MB2         &mkp MB3           &trans      &trans       &mkp MB3       &mkp MB1         &mkp MB2           &trans  &lt_to_layer_0 5 KP_MINUS
&trans                     &trans     &mkp MB4   &mkp MB5         &mkp MB5           &trans      &trans       &trans         &mkp MB4         &mkp MB5           &trans  &trans
&trans                     &trans     &trans     &trans           &trans             &trans      &kp PAGE_UP  &kp PAGE_DOWN                                              &trans
            >;
        };
    };
};
